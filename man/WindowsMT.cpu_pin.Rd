% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpu_pin.R
\name{WindowsMT.cpu_pin}
\alias{WindowsMT.cpu_pin}
\title{Windows CPU Pinning}
\usage{
WindowsMT.cpu_pin(n_request,
  n_cores = as.integer(Sys.getenv("NUMBER_OF_PROCESSORS")), n_sockets = 1,
  n_hyperthread = TRUE, verbose = TRUE, test = FALSE)
}
\arguments{
\item{n_request}{Type: integer. Number of logical cores to pin.}

\item{n_cores}{Type: integer. Number of logical cores on your machine. Defaults to \code{as.integer(Sys.getenv("NUMBER_OF_PROCESSORS"))}.}

\item{n_sockets}{Type: integer. Number of sockets on your machine. Defaults to \code{1}.}

\item{n_hyperthread}{Type: logical. Whether hyperthreading is activated. Defaults to \code{TRUE}.}

\item{verbose}{Type: logical. Whether to print debug information. Defaults to \code{TRUE}.}

\item{test}{Type: logical. Whether to just print the pinning without performing the pinning (placebo if \code{TRUE}). Defaults to \code{FALSE}.}
}
\description{
Pins CPU on Windows depending on the number of cores requested.
}
\details{
CPU pinning forces the first group of appropriate cores to be pinned. It handles hyperthreaded cores correctly by trying to avoid them. It has a parameter for the sockets, but it is currently unused.
}
\examples{
\dontrun{
# Pin 1 core
WindowsMT.cpu_pin(1)

# Pin 2 core
WindowsMT.cpu_pin(2)

# Pin all cores (reset pinning)
WindowsMT.cpu_pin(as.integer(Sys.getenv("NUMBER_OF_PROCESSORS")))

# Crazy test, do not run
for (i in 1:4) {
for (j in c(FALSE, TRUE)) {
  for (k in 1:10) {
    for (l in 1:(i * k * (j + 1))) {
      WindowsMT.cpu_pin(l, i * k * (j + 1), i, j, TRUE, FALSE)
    }
  }
}
}

}

}
